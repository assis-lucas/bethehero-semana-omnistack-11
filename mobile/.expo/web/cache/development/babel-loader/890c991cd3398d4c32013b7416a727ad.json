{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\mobile\\\\src\\\\pages\\\\Incidents\\\\index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Feather } from \"@expo/vector-icons\";\nimport api from \"../../services/api\";\nimport logoImg from \"../../assets/logo.png\";\nimport styles from \"./styles\";\nexport default function Incidents() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      incidents = _useState2[0],\n      setIncidents = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      total = _useState4[0],\n      setTotal = _useState4[1];\n\n  var navigation = useNavigation();\n\n  function navigateToDetail(incident) {\n    navigation.navigate(\"Detail\", {\n      incident: incident\n    });\n  }\n\n  function loadIncidents() {\n    var response;\n    return _regeneratorRuntime.async(function loadIncidents$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(api.get(\"incidents\"));\n\n          case 2:\n            response = _context.sent;\n            setIncidents(response.data);\n            setTotal(response.headers[\"x-total-count\"]);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    loadIncidents();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: logoImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.headerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Total de \", React.createElement(Text, {\n    style: styles.headerTextBold,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 20\n    }\n  }, total, \" casos\"), \".\")), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Bem-Vindo!\"), React.createElement(Text, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Escolha um dos casos abaixo e salve o dia.\"), React.createElement(FlatList, {\n    data: incidents,\n    style: styles.incidentList,\n    showsVerticalScrollIndicator: false,\n    keyExtractor: function keyExtractor(incident) {\n      return String(incident.id);\n    },\n    renderItem: function renderItem(_ref) {\n      var incident = _ref.item;\n      return React.createElement(View, {\n        style: styles.incident,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, \"ONG:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, incident.name), React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, \"CASO:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, incident.title), React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, \"VALOR:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, Intl.NumberFormat(\"pt-BR\", {\n        style: \"currency\",\n        currency: \"BRL\"\n      }).format(incident.value)), React.createElement(TouchableOpacity, {\n        style: styles.detailsButton,\n        onPress: navigateToDetail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }\n      }, \"Ver mais detalhes\"), React.createElement(Feather, {\n        name: \"arrow-right\",\n        size: 16,\n        color: \"#E02041\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }\n      })));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/mobile/src/pages/Incidents/index.js"],"names":["React","useEffect","useState","useNavigation","Feather","api","logoImg","styles","Incidents","incidents","setIncidents","total","setTotal","navigation","navigateToDetail","incident","navigate","loadIncidents","get","response","data","headers","container","header","headerText","headerTextBold","title","description","incidentList","String","id","item","incidentProperty","incidentValue","name","Intl","NumberFormat","style","currency","format","value","detailsButton","detailsButtonText"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, FlatList, Image, Text, TouchableOpacity } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\n\r\nimport api from \"../../services/api\";\r\n\r\nimport logoImg from \"../../assets/logo.png\";\r\n\r\nimport styles from \"./styles\";\r\n\r\nexport default function Incidents() {\r\n  const [incidents, setIncidents] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const navigation = useNavigation();\r\n\r\n  function navigateToDetail(incident) {\r\n    navigation.navigate(\"Detail\", { incident });\r\n  }\r\n\r\n  async function loadIncidents() {\r\n    const response = await api.get(\"incidents\");\r\n\r\n    setIncidents(response.data);\r\n    setTotal(response.headers[\"x-total-count\"]);\r\n  }\r\n  useEffect(() => {\r\n    loadIncidents();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Image source={logoImg} />\r\n        <Text style={styles.headerText}>\r\n          Total de <Text style={styles.headerTextBold}>{total} casos</Text>.\r\n        </Text>\r\n      </View>\r\n\r\n      <Text style={styles.title}>Bem-Vindo!</Text>\r\n      <Text style={styles.description}>\r\n        Escolha um dos casos abaixo e salve o dia.\r\n      </Text>\r\n\r\n      <FlatList\r\n        data={incidents}\r\n        style={styles.incidentList}\r\n        showsVerticalScrollIndicator={false}\r\n        keyExtractor={incident => String(incident.id)}\r\n        renderItem={({ item: incident }) => (\r\n          <View style={styles.incident}>\r\n            <Text style={styles.incidentProperty}>ONG:</Text>\r\n            <Text style={styles.incidentValue}>{incident.name}</Text>\r\n\r\n            <Text style={styles.incidentProperty}>CASO:</Text>\r\n            <Text style={styles.incidentValue}>{incident.title}</Text>\r\n\r\n            <Text style={styles.incidentProperty}>VALOR:</Text>\r\n            <Text style={styles.incidentValue}>\r\n              {Intl.NumberFormat(\"pt-BR\", {\r\n                style: \"currency\",\r\n                currency: \"BRL\",\r\n              }).format(incident.value)}\r\n            </Text>\r\n\r\n            <TouchableOpacity\r\n              style={styles.detailsButton}\r\n              onPress={navigateToDetail}\r\n            >\r\n              <Text style={styles.detailsButtonText}>Ver mais detalhes</Text>\r\n              <Feather name='arrow-right' size={16} color='#E02041' />\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}